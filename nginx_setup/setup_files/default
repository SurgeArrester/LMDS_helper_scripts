##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
	# listen 80 default_server;
	# listen [::]:80 default_server;

	# SSL configuration
	#
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	ssl_certificate /path/to/your/ssl/cert.pem;
	ssl_certificate_key /path/to/your/ssl/key;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

	root /var/www/html; # Path to files you want hosted statically

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name your_domain.ac.uk; #put your domain here for example

	access_log /var/log/nginx/nginx.vhost.access.log;
	error_log /var/log/nginx/nginx.vhost.error.log;
	proxy_request_buffering off;
	proxy_buffering off;
	proxy_redirect off;

	proxy_connect_timeout 75s;

	#If you wish to host static media for the entire domain
	#(for example CSS or javascript), edit the following, if not comment it out
	location /static {
		alias /www/media/static/;
		try_files $uri $uri/ =404;
		autoindex on;
	}

	#Add new apps like this (or using the provided script)
	#This will add a new app at your_domain.ac.uk/example
	location /example {
		proxy_pass http://example_proxy_address:port_number;
	}
  #Apps which are on the same (virtual) machine can be addressed like this:
	location /local_example {
		proxy_pass http://127.0.0.1:port_number;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		proxy_request_buffering off;
		proxy_buffering off;
		proxy_redirect off;

		proxy_connect_timeout 75s;
		try_files $uri $uri/ =404;
	}

}
